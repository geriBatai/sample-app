# config
# It is Coming from GLP-common library and in Future it can be used : Crosscutting
spring.security.enable-csrf=false
feature.oauth2.enabled=false
feature.security.enabled=false

# Automatically create views and indexes by "@ViewIndexed", "@N1qlPrimaryIndexed","@N1qlSecondaryIndexed".
# It will create the index in event of NO index for the concerned bucket : Devops
spring.data.couchbase.auto-index=true

# Couchbase

database=COUCHBASESERVER
glp.core.data.couchbase.bucket=${COUCHBASE_SERVER_BUCKETNAME}
#couchbaseserver.bucketPassword=
glp.core.data.couchbase.hosts=${COUCHBASE_SERVER_HOSTNAME}
glp.core.data.couchbase.username=${CLUSTER_USERNAME}
glp.core.data.couchbase.password=${CLUSTER_PASSWORD}

server.port=${SERVER_PORT}

# logging
logging.level.root=${ROOT_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_LOG_LEVEL}
logging.level.com.pearson.glp.crosscutting.isc.saga.service=${ROOT_LOG_LEVEL}
logging.level.com.pearson.glp=${COM_PEARSON_LOG_LEVEL}
logging.level.request_trace=${REQUEST_TRACE_LOG_LEVEL}
logging.file-path=${LOG_FILE_PATH}

# configuration of distributed tracing
spring.zipkin.service.name=imc-{ENV_BASE_URL}
spring.zipkin.sender.type=web
spring.zipkin.baseUrl=http://zipkin:9411/
spring.sleuth.sampler.probability=1.0
spring.sleuth.web.client.enabled=true

#### Common Kafka Properties ###
# bootstrap.servers=${ISC_KAFKA_PORT}
spring.cloud.stream.kafka.binder.brokers=${ISC_KAFKA_PORT}

### ConsumerConfiguration.properties ###
spring.kafka.consumer.group-id=glpv2imc
enable.auto.commit=true
auto.commit.interval.ms=1000
session.timeout.ms=30000
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
poll.interval=1000

### ZookeeperConfiguration.properties ###
zookeeper.hosts=${ISC_ZOOKEEPER_PORT}
session.time.out.in.ms=15000
connection.time.out.in.ms=10000
no.of.partitions=${ISC_ZOOKEEPER_PARTITIONS}
no.of.replication=${ISC_ZOOKEEPER_REPLICATIONS}

###App properties
glp.iam.url=http://iam:9100/iam/v2/eventSignRequests
glpAllowedProductCodes=${GLP_ALLOWED_PRODUCT_CODES}

#SDK configurations
environment.type=${ENVIRONMENT_TYPE}
getPiTokenAPI=http://iam:9100/iam/v1/tokens?action=PiToken&env=stg

#glp-queues for event listening
queueName=${QUEUE_NAME}
queue.url=${QUEUE_URL}
iamsi.url=http://iamsi:9050/iamsi/v1/users
pi.service.username=NjMmEy-DdT_hIjCV9Yg_cHcU2r9rlBkQQQGpKDYycnM=
pi.service.credential=3MJ9PM_L9R8fjW081GQwyJvIdDeHo3OF2MFWlXQHkzc=
env_code={ENV_CODE}


# It is not changed untill provided to us by Develoer: means it is static for us : DEVOP
jwtValue=eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiJhZjIzNmMwNDkwMzE0YzRmYjEyZjllMDdjOTY1MTQ3MmVhYjU5NzdkM2IyYTIwZmI5ZjliOGUyZTc3MzNjMDM4IiwiaXNzIjoiR0xQIiwianRpIjoiZDdhYzI1N2UtZTgxOS00ODNiLTk1NjQtMmY5N2RhMGI2NGNjIn0.Z95psinmhbEUtTDqaf60VpWdX0qyWSbrFUDT5sNkhWKBFosS8QU-ZqHQ4H_BRQa76O3IpUKj7_oICGe5E-S9ww
ListenerAndQueueRegistrationName=InboundMessageReceiver
eventsToPublish=CourseregistrationCreated,SectionUpdated,CourseregistrationUpdated,SectionDeleted,SectionCreated,CourseregistrationDeleted,CourseCreated,autobahn-section-created,autobahn-course-registration-created,CourseregistrationDeletedSuccess,SectionUpdatedSuccess,CourseregistrationUpdatedSuccess,SectionDeletedSuccess,lec-section-created-success,autobahn-section-created_Ram,autobahn-course-registration-created-new_Ram

