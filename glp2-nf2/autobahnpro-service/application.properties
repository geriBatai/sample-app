# config
spring.security.enable-csrf=false
feature.oauth2.enabled=false
feature.security.enabled=false

# Couchbase  userYour Username and password of couchbase
glp.core.data.couchbase.enabled=true
glp.core.data.couchbase.bucket=${COUCHBASE_SERVER_BUCKETNAME}
glp.core.data.couchbase.hosts=${COUCHBASE_SERVER_HOSTNAME}
glp.core.data.couchbase.username=${CLUSTER_USERNAME}
glp.core.data.couchbase.password=${CLUSTER_PASSWORD}


# Automatically create views and indexes by "@ViewIndexed", "@N1qlPrimaryIndexed","@N1qlSecondaryIndexed".
spring.data.couchbase.auto-index=true

server.port=${SERVER_PORT}
server.contextPath=/autobahnpro
management.endpoint.health.show-details=ALWAYS
management.health.defaults.enabled=false
management.endpoints.web.base-path=/autobahnpro
management.endpoints.web.path-mapping.health=health

# logging
logging.level.root=INFO
logging.level.org.springframework.web=WARN
logging.level.com.pearson=${COM_PEARSON_LOG_LEVEL}
logging.level.request_trace=ERROR
logging.file-path=${LOG_FILE_PATH}

# configuration of distributed tracing
spring.zipkin.service.name=GLPv2-Autobahn-Pro
spring.zipkin.sender.type=web
spring.zipkin.baseUrl=http://zipkin:9411/
spring.sleuth.sampler.probability=1.0
spring.sleuth.web.client.enabled=true

### ISC Configuration ###
event.type.list=
isc.saga.timeout.fixedDelay=30000

#### Common Kafka Properties ###
#bootstrap.servers=${ISC_KAFKA_PORT}
spring.cloud.stream.kafka.binder.brokers=${ISC_KAFKA_PORT}

### ConsumerConfiguration.properties ###
group.id=glpv2autobanpro
enable.auto.commit=true
auto.commit.interval.ms=1000
session.timeout.ms=30000
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
poll.interval=1000

### ProducerConfiguration.properties ###
acks=all
retries=0
batch.size=10
linger.ms=1
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer

### ZookeeperConfiguration.properties ###
zookeeper.hosts=${ISC_ZOOKEEPER_PORT}
session.time.out.in.ms=15000
connection.time.out.in.ms=10000
no.of.partitions=${ISC_ZOOKEEPER_PARTITIONS}
no.of.replication=${ISC_ZOOKEEPER_REPLICATIONS}

### Error handling properties ###
errorUserDesc.400= The request does not comply with the expected schema.
errorUserDesc.401= The request made to a resource requires authentication.
errorUserDesc.403= The request made to a resource is not authorized for an authenticated user.
errorUserDesc.404= The resource does not exist.
errorUserDesc.405= The requested HTTP Method is not allowed/supported on the resource.
errorUserDesc.406= The resource cannot provide a representation that meets the request requirements in regards of its Content-Type, as sent in the request Accepts header.
errorUserDesc.415= The request has an unsupported media-type on the Content-Type header.
errorUserDesc.422= The Content-Type and Schema validations have been successful, but the server was unable to execute the operation with the provided information.
errorUserDesc.500= There is an internal server error.