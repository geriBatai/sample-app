# config
spring.security.enable-csrf=false
context.path=/gms
validate.schema=true
graphNode.maxRequestSize =30
graphEdge.maxRequestSize =30
graph.defaultDepth=4
graph.minDepth=1
graph.maxDepth=7
graph.batch.minRecords=50
graph.cache.minRecords=20
graph.batch.size=8
graph.batch.pool.size=300
graphNode.deleteNodeCheck.enabled=true
graph.maxRequestSize=101

#validation
global.validations.enabled = true
createGraphNode.validations.enabled = true
createGraphEdge.validations.enabled = true

#couchbase
glp.core.data.couchbase.enabled=false
glp.core.data.couchbase.bucket=${COUCHBASE_SERVER_BUCKETNAME}
glp.core.data.couchbase.hosts=${COUCHBASE_SERVER_HOSTNAME}
glp.core.data.couchbase.username=${CLUSTER_USERNAME}
glp.core.data.couchbase.password=${CLUSTER_PASSWORD}

# Sleuth needs to be disabled
spring.sleuth.web.client.enabled=false
spring.sleuth.enabled=false

# Automatically create views and indexes by "@ViewIndexed", "@N1qlPrimaryIndexed","@N1qlSecondaryIndexed".
spring.data.couchbase.auto-index=true

server.port=${SERVER_PORT}

management.endpoint.health.show-details=ALWAYS
management.health.defaults.enabled=false
management.endpoint.health.enabled=false
management.endpoints.web.base-path=/gms
management.endpoints.web.path-mapping.health=health

#### Metrics Configuration.properties #########
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=false
management.metrics.export.prometheus.enabled=false
management.endpoints.web.exposure.include=health,ready,metrics,refresh

# logging
logging.level.root=${ROOT_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_LOG_LEVEL}
logging.level.com.pearson=${COM_PEARSON_LOG_LEVEL}
logging.level.request_trace=${REQUEST_TRACE_LOG_LEVEL}

### ISC Configuration ###
isc.saga.timeout.fixedDelay=30000

#### Common Kafka Properties ###
spring.cloud.stream.kafka.binder.brokers=${ISC_KAFKA_PORT}

### ConsumerConfiguration.properties ###
group.id=GMS_APP

### ZookeeperConfiguration.properties ###
zookeeper.hosts=${ISC_ZOOKEEPER_PORT}

### Features
feature.oauth2.enabled=false
feature.security.enabled=false
### Error handling properties ###
errorUserDesc.error400= There was an error processing the request.
errorUserDesc.401= The request made to a resource requires authentication.
errorUserDesc.error403= The request made to a resource is not authorized for an authenticated user.
errorUserDesc.error404= Requested resource does not exist.
errorUserDesc.error405= The requested HTTP Method is not allowed/supported on the resource.
errorUserDesc.error406= The resource cannot provide a representation that meets the request requirements in regards of its Content-Type, as sent in the request Accepts header.
errorUserDesc.error415= The request has an unsupported media-type on the Content-Type header.
errorUserDesc.error422= The Content-Type and Schema validations have been successful, but the server was unable to execute the operation with the provided information.
errorUserDesc.error500= There is an internal server error.

## Neptune configureation
## For domain environment change neptune.address =glp-neptune-poc.cgtzemmgm1xd.us-east-2.neptune.amazonaws.com
##neptune.address =graph-mgt-cluster.cluster-cgtzemmgm1xd.us-east-2.neptune.amazonaws.com
neptune.address =${NEPTUNE_ADDRESS}
neptune.port = ${NEPTUNE_PORT}
neptune.maxContentLength = 12345678
neptune.maxSimultaneousUsagePerConnection=32
neptune.maxInProcessPerConnection=32
neptune.maxConnectionPoolSize=16
neptune.security.enabled=false
