# config
#spring.cloud.config.enabled=false
spring.security.enable-csrf=false
feature.oauth2.enabled=false
feature.security.enabled=false

glp.core.security.registrar.path=https://registrar.stg-openclass.com
glp.core.security.passport.path=https://passport.stg-openclass.com
glp.core.security.courseAssociation.path=https://course-association.stg-openclass.com

# Couchbase  userYour Username and password of couchbase
#database=${DATABASE_TYPE}
glp.core.data.couchbase.bucket=${COUCHBASE_SERVER_BUCKETNAME}
#couchbaseserver.bucketPassword=
glp.core.data.couchbase.hosts=${COUCHBASE_SERVER_HOSTNAME}
glp.core.data.couchbase.username=${CLUSTER_USERNAME}
glp.core.data.couchbase.password=${CLUSTER_PASSWORD}

#See CouchbaseConfiguration for more options
couchbase-env-config.enabled=false

# Automatically create views and indexes by "@ViewIndexed", "@N1qlPrimaryIndexed","@N1qlSecondaryIndexed".
spring.data.couchbase.auto-index=true
iam.service.contextPath=/iam
contextPath=/iam

server.port=${SERVER_PORT}
#### Metrics Configuration.properties #########
management.endpoint.health.enabled=false
management.health.defaults.enabled=false
management.endpoints.web.base-path=/{contextPath}
management.endpoints.web.exposure.include=health,ready,metrics
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=false
management.metrics.export.prometheus.enabled=false


#spring.profiles.active=Development

# logging
logging.level.root=${ROOT_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_LOG_LEVEL}
logging.level.com.pearson.glp.crosscutting.isc.saga.service=${ROOT_LOG_LEVEL}
logging.level.com.pearson.glp.iam=${COM_PEARSON_LOG_LEVEL}
logging.level.request_trace=${REQUEST_TRACE_LOG_LEVEL}
logging.file-path=${LOG_FILE_PATH}

# configuration of distributed tracing
spring.zipkin.service.name=iam-{ENV_BASE_URL}
spring.zipkin.sender.type=web
spring.zipkin.baseUrl=http://zipkin:9411/
spring.sleuth.sampler.probability=1.0
spring.sleuth.web.client.enabled=true

### ISC Configuration ###
event.type.list=MyEventName1,MyEventName2
isc.saga.timeout.fixedDelay=30000

#### Common Kafka Properties ###
bootstrap.servers=${ISC_KAFKA_PORT}
spring.cloud.stream.kafka.binder.brokers=${ISC_KAFKA_PORT}


### ConsumerConfiguration.properties ###
spring.kafka.consumer.group-id=glpv2iam
enable.auto.commit=true
auto.commit.interval.ms=1000
session.timeout.ms=30000
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
poll.interval=1000

### ProducerConfiguration.properties ###
acks=all
retries=0
batch.size=10
linger.ms=1
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer

### ZookeeperConfiguration.properties ###
zookeeper.hosts=${ISC_ZOOKEEPER_PORT}
session.time.out.in.ms=15000
connection.time.out.in.ms=10000
no.of.partitions=${ISC_ZOOKEEPER_PARTITIONS}
no.of.replication=${ISC_ZOOKEEPER_REPLICATIONS}
isc.saga.timeout.fixedDelay=10
validate.schema=true
config.home=config

### service specific properties###
pi.service.username=sYQqQfgW4HzpcnMs30bfqzq-UNppfHMHORAYcUHwWLU=
pi.service.credential=2_6fJJ6fdUDIFkO8I1Uss5lpeJJv5IWYEbqI_ICYl0DjgGLQEYX_ez9QqSMCpWfH
pi.token.url=https://int-piapi-internal.stg-openclass.com/tokens
#Deprecated
pi.stg.service.login.url=https://int-piapi-internal.stg-openclass.com/tokens
iam.service.url=/v2/eventSignRequests
iam.service.token.url=/v2/token

